;; Analyzed by ClojureScript 1.7.228
{:use-macros {testing cljs.test, async cljs.test, go cljs.core.async.macros, is cljs.test, go-loop cljs.core.async.macros, deftest cljs.test, asynchronize cljs-asynchronize.macros, run-tests cljs.test}, :excludes #{}, :name cljs-async-patterns.core-test, :imports nil, :requires {core cljs-async-patterns.core, cljs-async-patterns.core cljs-async-patterns.core, cljs.test cljs.test, node cljs.nodejs, cljs.nodejs cljs.nodejs, cljs.core.async cljs.core.async, s clojure.string, clojure.string clojure.string}, :uses {<! cljs.core.async, buffer cljs.core.async, close! cljs.core.async, offer! cljs.core.async, chan cljs.core.async, >! cljs.core.async, alts! cljs.core.async, poll! cljs.core.async, put! cljs.core.async, take! cljs.core.async}, :defs {async-1 {:protocol-inline nil, :meta {:file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :line 23, :column 7, :end-line 23, :end-column 14, :arglists (quote ([arg cb])), :doc "Executes a 1-argument callback."}, :name cljs-async-patterns.core-test/async-1, :variadic false, :file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :end-column 14, :method-params ([arg cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([arg cb])), :doc "Executes a 1-argument callback."}, async-2 {:protocol-inline nil, :meta {:file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :line 30, :column 7, :end-line 30, :end-column 14, :arglists (quote ([arg cb])), :doc "Executes a 2-argument callback."}, :name cljs-async-patterns.core-test/async-2, :variadic false, :file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :end-column 14, :method-params ([arg cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([arg cb])), :doc "Executes a 2-argument callback."}, async-3 {:protocol-inline nil, :meta {:file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :line 37, :column 7, :end-line 37, :end-column 14, :arglists (quote ([arg cb])), :doc "Executes a 3-argument callback."}, :name cljs-async-patterns.core-test/async-3, :variadic false, :file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :end-column 14, :method-params ([arg cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([arg cb])), :doc "Executes a 3-argument callback."}, prnt-cb-1 {:protocol-inline nil, :meta {:file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :line 45, :column 6, :end-line 45, :end-column 15}, :name cljs-async-patterns.core-test/prnt-cb-1, :variadic false, :file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :end-column 15, :method-params ([res]), :protocol-impl nil, :arglists-meta (), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists nil}, prnt-cb-2 {:protocol-inline nil, :meta {:file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :line 46, :column 6, :end-line 46, :end-column 15}, :name cljs-async-patterns.core-test/prnt-cb-2, :variadic false, :file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :end-column 15, :method-params ([err res]), :protocol-impl nil, :arglists-meta (), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists nil}, prnt-cb-3 {:protocol-inline nil, :meta {:file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :line 47, :column 6, :end-line 47, :end-column 15}, :name cljs-async-patterns.core-test/prnt-cb-3, :variadic false, :file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :end-column 15, :method-params ([arg1 arg2 arg3]), :protocol-impl nil, :arglists-meta (), :column 1, :line 47, :end-line 47, :max-fixed-arity 3, :fn-var true, :arglists nil}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, dm cljs-asynchronize.macros, cljs-asynchronize.macros cljs-asynchronize.macros, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc nil}