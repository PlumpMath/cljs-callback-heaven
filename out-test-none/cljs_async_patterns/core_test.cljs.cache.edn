;; Analyzed by ClojureScript 1.7.228
{:use-macros {<3 cljs-async-patterns.macros, testing cljs.test, <1 cljs-async-patterns.macros, async cljs.test, go cljs.core.async.macros, is cljs.test, go-loop cljs.core.async.macros, <? cljs-async-patterns.macros, deftest cljs.test, <2 cljs-async-patterns.macros, asynchronize cljs-asynchronize.macros, run-tests cljs.test}, :excludes #{}, :name cljs-async-patterns.core-test, :imports nil, :requires {core cljs-async-patterns.core, cljs-async-patterns.core cljs-async-patterns.core, cljs.test cljs.test, node cljs.nodejs, cljs.nodejs cljs.nodejs, cljs.core.async cljs.core.async, s clojure.string, clojure.string clojure.string}, :uses {<! cljs.core.async, buffer cljs.core.async, close! cljs.core.async, offer! cljs.core.async, chan cljs.core.async, >! cljs.core.async, alts! cljs.core.async, poll! cljs.core.async, put! cljs.core.async, take! cljs.core.async}, :defs {t_cljs_async_patterns$core_test40293 {:num-fields 1, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :name cljs-async-patterns.core-test/t_cljs_async_patterns$core_test40293, :file "test/cljs_async_patterns/core_test.cljs", :type true, :anonymous true, :column 3, :line 47, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs_async_patterns$core_test40679 {:num-fields 1, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :name cljs-async-patterns.core-test/t_cljs_async_patterns$core_test40679, :file "test/cljs_async_patterns/core_test.cljs", :type true, :anonymous true, :column 3, :line 59, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cljs_async_patterns$core_test40679 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta40680])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :name cljs-async-patterns.core-test/->t_cljs_async_patterns$core_test40679, :variadic false, :file "test/cljs_async_patterns/core_test.cljs", :method-params ([meta40680]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta40680])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cljs_async_patterns$core_test42935 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta42936])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :name cljs-async-patterns.core-test/->t_cljs_async_patterns$core_test42935, :variadic false, :file "test/cljs_async_patterns/core_test.cljs", :method-params ([meta42936]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 122, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta42936])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cljs_async_patterns$core_test41301 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta41302])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :name cljs-async-patterns.core-test/->t_cljs_async_patterns$core_test41301, :variadic false, :file "test/cljs_async_patterns/core_test.cljs", :method-params ([meta41302]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta41302])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cljs_async_patterns$core_test42159 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta42160])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :name cljs-async-patterns.core-test/->t_cljs_async_patterns$core_test42159, :variadic false, :file "test/cljs_async_patterns/core_test.cljs", :method-params ([meta42160]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta42160])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, async-3-saturated {:protocol-inline nil, :meta {:file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :line 43, :column 7, :end-line 43, :end-column 24, :arglists (quote ([arg cb]))}, :name cljs-async-patterns.core-test/async-3-saturated, :variadic false, :file "test/cljs_async_patterns/core_test.cljs", :end-column 24, :method-params ([arg cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([arg cb]))}, >1-test {:protocol-inline nil, :meta {:file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :line 46, :column 10, :end-line 46, :end-column 17}, :name cljs-async-patterns.core-test/>1-test, :variadic false, :file "test/cljs_async_patterns/core_test.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 46, :end-line 46, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, ->t_cljs_async_patterns$core_test40293 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta40294])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :name cljs-async-patterns.core-test/->t_cljs_async_patterns$core_test40293, :variadic false, :file "test/cljs_async_patterns/core_test.cljs", :method-params ([meta40294]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta40294])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, async-3 {:protocol-inline nil, :meta {:file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :line 32, :column 7, :end-line 32, :end-column 14, :arglists (quote ([arg cb])), :doc "Executes a 3-argument callback."}, :name cljs-async-patterns.core-test/async-3, :variadic false, :file "test/cljs_async_patterns/core_test.cljs", :end-column 14, :method-params ([arg cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([arg cb])), :doc "Executes a 3-argument callback."}, >3-test {:protocol-inline nil, :meta {:file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :line 74, :column 10, :end-line 74, :end-column 17}, :name cljs-async-patterns.core-test/>3-test, :variadic false, :file "test/cljs_async_patterns/core_test.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 74, :end-line 74, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, >?-one {:protocol-inline nil, :meta {:file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :line 94, :column 10, :end-line 94, :end-column 16}, :name cljs-async-patterns.core-test/>?-one, :variadic false, :file "test/cljs_async_patterns/core_test.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 94, :end-line 94, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, async-1 {:protocol-inline nil, :meta {:file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :line 18, :column 7, :end-line 18, :end-column 14, :arglists (quote ([arg cb])), :doc "Executes a 1-argument callback."}, :name cljs-async-patterns.core-test/async-1, :variadic false, :file "test/cljs_async_patterns/core_test.cljs", :end-column 14, :method-params ([arg cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([arg cb])), :doc "Executes a 1-argument callback."}, ->t_cljs_async_patterns$core_test42545 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta42546])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :name cljs-async-patterns.core-test/->t_cljs_async_patterns$core_test42545, :variadic false, :file "test/cljs_async_patterns/core_test.cljs", :method-params ([meta42546]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta42546])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, >?-three {:protocol-inline nil, :meta {:file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :line 120, :column 10, :end-line 120, :end-column 18}, :name cljs-async-patterns.core-test/>?-three, :variadic false, :file "test/cljs_async_patterns/core_test.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 120, :end-line 120, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, t_cljs_async_patterns$core_test42545 {:num-fields 1, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :name cljs-async-patterns.core-test/t_cljs_async_patterns$core_test42545, :file "test/cljs_async_patterns/core_test.cljs", :type true, :anonymous true, :column 5, :line 109, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs_async_patterns$core_test42159 {:num-fields 1, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :name cljs-async-patterns.core-test/t_cljs_async_patterns$core_test42159, :file "test/cljs_async_patterns/core_test.cljs", :type true, :anonymous true, :column 5, :line 96, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs_async_patterns$core_test42935 {:num-fields 1, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :name cljs-async-patterns.core-test/t_cljs_async_patterns$core_test42935, :file "test/cljs_async_patterns/core_test.cljs", :type true, :anonymous true, :column 5, :line 122, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, >?-two {:protocol-inline nil, :meta {:file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :line 107, :column 10, :end-line 107, :end-column 16}, :name cljs-async-patterns.core-test/>?-two, :variadic false, :file "test/cljs_async_patterns/core_test.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 107, :end-line 107, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, async-2 {:protocol-inline nil, :meta {:file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :line 25, :column 7, :end-line 25, :end-column 14, :arglists (quote ([arg cb])), :doc "Executes a 2-argument callback."}, :name cljs-async-patterns.core-test/async-2, :variadic false, :file "test/cljs_async_patterns/core_test.cljs", :end-column 14, :method-params ([arg cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([arg cb])), :doc "Executes a 2-argument callback."}, async-2-saturated {:protocol-inline nil, :meta {:file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :line 40, :column 7, :end-line 40, :end-column 24, :arglists (quote ([arg cb]))}, :name cljs-async-patterns.core-test/async-2-saturated, :variadic false, :file "test/cljs_async_patterns/core_test.cljs", :end-column 24, :method-params ([arg cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([arg cb]))}, >2-test {:protocol-inline nil, :meta {:file "/home/george/Dropbox/cljs-async-patterns/test/cljs_async_patterns/core_test.cljs", :line 58, :column 10, :end-line 58, :end-column 17}, :name cljs-async-patterns.core-test/>2-test, :variadic false, :file "test/cljs_async_patterns/core_test.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 58, :end-line 58, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, t_cljs_async_patterns$core_test41301 {:num-fields 1, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :name cljs-async-patterns.core-test/t_cljs_async_patterns$core_test41301, :file "test/cljs_async_patterns/core_test.cljs", :type true, :anonymous true, :column 3, :line 75, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, cljs-async-patterns.macros cljs-async-patterns.macros, dm cljs-asynchronize.macros, cljs-asynchronize.macros cljs-asynchronize.macros, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{cljs-async-patterns.core-test/>1-test c7 = <! meta40680 :testing-contexts cljs-async-patterns.core-test :else :default :ns :name :file :end-column :recur :type cljs-async-patterns.core-test/>3-test c3 >1-test cljs-async-patterns.core-test/>?-one meta42160 >3-test >?-one :column c6 meta42936 c4 >?-three cljs-async-patterns.core-test/>?-three :fail :line not c2 :expected meta41302 :end-line :error meta40294 :pass meta42546 c1 :arglists :actual :doc >?-two cljs-async-patterns.core-test/>?-two :test >2-test c5 :message cljs-async-patterns.core-test/>2-test}, :order [:else :type :expected :actual :message = <! c1 not :fail :recur c3 :pass :default c2 :error meta40294 cljs-async-patterns.core-test/>1-test :ns :name :file :end-column :column :line :end-line :arglists :doc :test cljs-async-patterns.core-test >1-test c4 c5 meta40680 cljs-async-patterns.core-test/>2-test >2-test c7 c6 meta41302 cljs-async-patterns.core-test/>3-test >3-test :testing-contexts meta42160 cljs-async-patterns.core-test/>?-one >?-one meta42546 cljs-async-patterns.core-test/>?-two >?-two meta42936 cljs-async-patterns.core-test/>?-three >?-three]}, :doc nil}